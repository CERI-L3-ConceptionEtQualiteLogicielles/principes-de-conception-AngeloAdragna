Question 1 :
Voici les principes non respectant le principe SOLID :
- S : l'attribut private static représentant la liste des contacts devrait correpondre à une classe.
Au niveau hierachique j'aimerais creer une classe anulaire qui sera une implémentation de ContactService.
La classe contact ne sera plus une inmplémentation de l'interface ContactService.
- I :  la méthode envoyé mail n'est pas nécéssaire dans un service de gestion de contact.
Je dois creer une interface pour pour le mailing et une classe afin d'envoyer des mails.

DRY n'est pas respectée : getInfoContact et toString et afficheContacts réalise le même code.

Question 2 :
Création interface SendService et d'un gestionnaire de service afin de chosir le type : SMS, mail...

Question 3 :
Je crée une classe ServiceEnvoiPhoto et une classe EnvoiPhoto qui implémente SendService.
Méthode 1 ServiceEnvoiPhoto étend EnvoiPhoto.
Méthode 2 EnvoiPhoto crée une instance de ServiceEnvoiPhoto.